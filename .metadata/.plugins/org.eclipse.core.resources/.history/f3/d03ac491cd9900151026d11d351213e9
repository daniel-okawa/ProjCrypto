package src.algorithms;

public class AES {
	
	private int keySize = 128;
	private int Nb = 4;
	private int Nk = keySize / 32;
	private int Nr = Nk + 6;
	
	private byte[] inputArray = new byte[4 * Nb];
	private byte[] outputArray = new byte[4 * Nb];
	private byte[] word = new byte[Nb * (Nr + 1)];
	private byte[] stateArray = new byte[4 * Nb];
	
	
	public AES(String mode){
		if (mode == "ECB"){
			
		}
		else if (mode == "CBC"){
			
		}
		else if (mode == "CTR"){
			
		}
		

	}
	
	private void aes_encrypt(){
		//Copia a input para o state
		stateArray = inputArray.clone();
		addRoundKey(stateArray, word[Nb - 1]);
	}
	
	private void byteSubstitution(){}
	
	private void shiftRows(){}
	
	private void mixData(){}
	
	private void addRoundKey(byte[] stateArray, byte word){
		int i = 0;
		for (byte b : stateArray)
		    stateArray[i] = (byte) (b^ word);
	}
	

}
